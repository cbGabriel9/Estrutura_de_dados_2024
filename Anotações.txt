COMANDOS DO GIT

git clone - Clona o repositório

clear - Limpa o terminal

git add - Adiciona os arquivos não rastreados pendentes as mudanças que irão fazer no commit

git status - Ver os status do repositório local

git commit -m "Aqui será a mensagem que será passada como título do commit" - Criar ponto de marcação no projeto/branch

git remote -v - Verificar repositórios remotos configurados no repo local

git push origin main - Enviar commits pendentes para o repo remoto


COMANDOS DO DOTNET

dotnet new console -n "Aula01" <- Exemplo - Criar novo projeto Console numa nova pasta

dotnet new console - Criar projeto na pasta atual

dotnet run - Executar programa

dotnet watch run - Executar programa com detalhes

dotnet build .\Aula02.csproj - Serve para compilar o código na máquina (Você pode utilizar o terminal do VSCode)

COMANDOS C#

// Comentário de linha
/* */ Comentário de bloco

LINGUAGEM ORIENTADA A OBJETO

Objeto // Possui características, ações e comportamentos. Exemplos: Pessoa, monitor, cadeira, mesa, cabo e etc...
Propriedades/atributos // São as características do objeto citado acima. Exemplo (Peso da pessoa, comprimento da mesa, altura do monitor e etc...
Ações de uma pessoa (Método) // O que o objeto pode fazer (ação). Exemplos: O ser humano, corre, andar, fala, pensa e etc...
Classe // É onde reside as características do objeto, serve como uma forma para criar um objeto. Uma classe é um tipo abstrato (Diferente dos tipos primitivos).
public Classes _classe // Classes.Guerreiro; // Declaração de uma variável (_classe). O "." é um operador de acesso;
public Classes GetClasseEnum(string lang) // Criação do método para pegar a classe contida no enumerador. O "Classes" está ali pois é o tipo do retorno daquela função
Os símbolos de "()" indica uma função, podendo ou não conter um argumento.

public int Age {get; set;} // Serve para permitir pegar o conteúdo dela (get) e setar a resposta na variável (set), este é parte do processo de encapsulamento;

public Person(string name, int age) // o "name" e "age" é minúsculo pois são parâmetros;

public void Realocate (string location) // O void é sinalizado indicando que vai ser um procedimento, então ele só vai executar o código, não terá um resultado no retorno;

A principal diferença entre o ArrayList e o List é que o primeiro NÃO É fortemente tipado(Se reestringe a receber apenas o tipo especificado).

public Person ()
        {
            Name = "------"; // Quando o método construtor for utilizado e não for passado parâmetros para a construção, a saída será "------";
        } 

Quando há apenas uma instrução dentro de um escopo de comando, exemplo: If, foreach, for e etc, você não precisa utilizar as chaves;


<> = Signfica que a lista é genérica (Onde vc especifica o tipo);

Atividade:

Crie um novo projeto para um programa que armazene em uma lista informações sobre livros, como nome, editora, autor e números de páginas. Preencha esta lista com no mínimo 5 livros e ao final percorra esta lista e percorra as informações do livros com o maior número de páginas.